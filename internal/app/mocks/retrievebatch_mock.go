// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/handlers/retrievebatch.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	storage "github.com/rycln/shorturl/internal/app/storage"
)

// MockretrieveBatchStorager is a mock of retrieveBatchStorager interface.
type MockretrieveBatchStorager struct {
	ctrl     *gomock.Controller
	recorder *MockretrieveBatchStoragerMockRecorder
}

// MockretrieveBatchStoragerMockRecorder is the mock recorder for MockretrieveBatchStorager.
type MockretrieveBatchStoragerMockRecorder struct {
	mock *MockretrieveBatchStorager
}

// NewMockretrieveBatchStorager creates a new mock instance.
func NewMockretrieveBatchStorager(ctrl *gomock.Controller) *MockretrieveBatchStorager {
	mock := &MockretrieveBatchStorager{ctrl: ctrl}
	mock.recorder = &MockretrieveBatchStoragerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockretrieveBatchStorager) EXPECT() *MockretrieveBatchStoragerMockRecorder {
	return m.recorder
}

// GetAllUserURLs mocks base method.
func (m *MockretrieveBatchStorager) GetAllUserURLs(arg0 context.Context, arg1 string) ([]storage.ShortenedURL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllUserURLs", arg0, arg1)
	ret0, _ := ret[0].([]storage.ShortenedURL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllUserURLs indicates an expected call of GetAllUserURLs.
func (mr *MockretrieveBatchStoragerMockRecorder) GetAllUserURLs(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllUserURLs", reflect.TypeOf((*MockretrieveBatchStorager)(nil).GetAllUserURLs), arg0, arg1)
}

// MockretrieveBatchConfiger is a mock of retrieveBatchConfiger interface.
type MockretrieveBatchConfiger struct {
	ctrl     *gomock.Controller
	recorder *MockretrieveBatchConfigerMockRecorder
}

// MockretrieveBatchConfigerMockRecorder is the mock recorder for MockretrieveBatchConfiger.
type MockretrieveBatchConfigerMockRecorder struct {
	mock *MockretrieveBatchConfiger
}

// NewMockretrieveBatchConfiger creates a new mock instance.
func NewMockretrieveBatchConfiger(ctrl *gomock.Controller) *MockretrieveBatchConfiger {
	mock := &MockretrieveBatchConfiger{ctrl: ctrl}
	mock.recorder = &MockretrieveBatchConfigerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockretrieveBatchConfiger) EXPECT() *MockretrieveBatchConfigerMockRecorder {
	return m.recorder
}

// GetBaseAddr mocks base method.
func (m *MockretrieveBatchConfiger) GetBaseAddr() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBaseAddr")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetBaseAddr indicates an expected call of GetBaseAddr.
func (mr *MockretrieveBatchConfigerMockRecorder) GetBaseAddr() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBaseAddr", reflect.TypeOf((*MockretrieveBatchConfiger)(nil).GetBaseAddr))
}

// GetKey mocks base method.
func (m *MockretrieveBatchConfiger) GetKey() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKey")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetKey indicates an expected call of GetKey.
func (mr *MockretrieveBatchConfigerMockRecorder) GetKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKey", reflect.TypeOf((*MockretrieveBatchConfiger)(nil).GetKey))
}

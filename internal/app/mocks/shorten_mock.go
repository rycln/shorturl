// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/handlers/shorten.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	storage "github.com/rycln/shorturl/internal/app/storage"
)

// MockshortenStorager is a mock of shortenStorager interface.
type MockshortenStorager struct {
	ctrl     *gomock.Controller
	recorder *MockshortenStoragerMockRecorder
}

// MockshortenStoragerMockRecorder is the mock recorder for MockshortenStorager.
type MockshortenStoragerMockRecorder struct {
	mock *MockshortenStorager
}

// NewMockshortenStorager creates a new mock instance.
func NewMockshortenStorager(ctrl *gomock.Controller) *MockshortenStorager {
	mock := &MockshortenStorager{ctrl: ctrl}
	mock.recorder = &MockshortenStoragerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockshortenStorager) EXPECT() *MockshortenStoragerMockRecorder {
	return m.recorder
}

// AddURL mocks base method.
func (m *MockshortenStorager) AddURL(arg0 context.Context, arg1 storage.ShortenedURL) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddURL", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddURL indicates an expected call of AddURL.
func (mr *MockshortenStoragerMockRecorder) AddURL(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddURL", reflect.TypeOf((*MockshortenStorager)(nil).AddURL), arg0, arg1)
}

// GetShortURL mocks base method.
func (m *MockshortenStorager) GetShortURL(arg0 context.Context, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetShortURL", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetShortURL indicates an expected call of GetShortURL.
func (mr *MockshortenStoragerMockRecorder) GetShortURL(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetShortURL", reflect.TypeOf((*MockshortenStorager)(nil).GetShortURL), arg0, arg1)
}

// MockshortenConfiger is a mock of shortenConfiger interface.
type MockshortenConfiger struct {
	ctrl     *gomock.Controller
	recorder *MockshortenConfigerMockRecorder
}

// MockshortenConfigerMockRecorder is the mock recorder for MockshortenConfiger.
type MockshortenConfigerMockRecorder struct {
	mock *MockshortenConfiger
}

// NewMockshortenConfiger creates a new mock instance.
func NewMockshortenConfiger(ctrl *gomock.Controller) *MockshortenConfiger {
	mock := &MockshortenConfiger{ctrl: ctrl}
	mock.recorder = &MockshortenConfigerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockshortenConfiger) EXPECT() *MockshortenConfigerMockRecorder {
	return m.recorder
}

// GetBaseAddr mocks base method.
func (m *MockshortenConfiger) GetBaseAddr() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBaseAddr")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetBaseAddr indicates an expected call of GetBaseAddr.
func (mr *MockshortenConfigerMockRecorder) GetBaseAddr() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBaseAddr", reflect.TypeOf((*MockshortenConfiger)(nil).GetBaseAddr))
}

// GetKey mocks base method.
func (m *MockshortenConfiger) GetKey() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKey")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetKey indicates an expected call of GetKey.
func (mr *MockshortenConfigerMockRecorder) GetKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKey", reflect.TypeOf((*MockshortenConfiger)(nil).GetKey))
}

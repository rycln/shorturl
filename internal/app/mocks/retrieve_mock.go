// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/handlers/retrieve.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockretrieveStorager is a mock of retrieveStorager interface.
type MockretrieveStorager struct {
	ctrl     *gomock.Controller
	recorder *MockretrieveStoragerMockRecorder
}

// MockretrieveStoragerMockRecorder is the mock recorder for MockretrieveStorager.
type MockretrieveStoragerMockRecorder struct {
	mock *MockretrieveStorager
}

// NewMockretrieveStorager creates a new mock instance.
func NewMockretrieveStorager(ctrl *gomock.Controller) *MockretrieveStorager {
	mock := &MockretrieveStorager{ctrl: ctrl}
	mock.recorder = &MockretrieveStoragerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockretrieveStorager) EXPECT() *MockretrieveStoragerMockRecorder {
	return m.recorder
}

// GetOrigURL mocks base method.
func (m *MockretrieveStorager) GetOrigURL(arg0 context.Context, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrigURL", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrigURL indicates an expected call of GetOrigURL.
func (mr *MockretrieveStoragerMockRecorder) GetOrigURL(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrigURL", reflect.TypeOf((*MockretrieveStorager)(nil).GetOrigURL), arg0, arg1)
}

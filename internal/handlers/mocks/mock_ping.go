// Code generated by MockGen. DO NOT EDIT.
// Source: ping.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockpingServicer is a mock of pingServicer interface.
type MockpingServicer struct {
	ctrl     *gomock.Controller
	recorder *MockpingServicerMockRecorder
}

// MockpingServicerMockRecorder is the mock recorder for MockpingServicer.
type MockpingServicerMockRecorder struct {
	mock *MockpingServicer
}

// NewMockpingServicer creates a new mock instance.
func NewMockpingServicer(ctrl *gomock.Controller) *MockpingServicer {
	mock := &MockpingServicer{ctrl: ctrl}
	mock.recorder = &MockpingServicerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockpingServicer) EXPECT() *MockpingServicerMockRecorder {
	return m.recorder
}

// PingStorage mocks base method.
func (m *MockpingServicer) PingStorage(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PingStorage", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// PingStorage indicates an expected call of PingStorage.
func (mr *MockpingServicerMockRecorder) PingStorage(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PingStorage", reflect.TypeOf((*MockpingServicer)(nil).PingStorage), arg0)
}

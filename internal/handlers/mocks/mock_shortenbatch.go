// Code generated by MockGen. DO NOT EDIT.
// Source: shortenbatch.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/rycln/shorturl/internal/models"
)

// MockshortenBatchServicer is a mock of shortenBatchServicer interface.
type MockshortenBatchServicer struct {
	ctrl     *gomock.Controller
	recorder *MockshortenBatchServicerMockRecorder
}

// MockshortenBatchServicerMockRecorder is the mock recorder for MockshortenBatchServicer.
type MockshortenBatchServicerMockRecorder struct {
	mock *MockshortenBatchServicer
}

// NewMockshortenBatchServicer creates a new mock instance.
func NewMockshortenBatchServicer(ctrl *gomock.Controller) *MockshortenBatchServicer {
	mock := &MockshortenBatchServicer{ctrl: ctrl}
	mock.recorder = &MockshortenBatchServicerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockshortenBatchServicer) EXPECT() *MockshortenBatchServicerMockRecorder {
	return m.recorder
}

// BatchShortenURL mocks base method.
func (m *MockshortenBatchServicer) BatchShortenURL(arg0 context.Context, arg1 models.UserID, arg2 []models.OrigURL) ([]models.URLPair, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BatchShortenURL", arg0, arg1, arg2)
	ret0, _ := ret[0].([]models.URLPair)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BatchShortenURL indicates an expected call of BatchShortenURL.
func (mr *MockshortenBatchServicerMockRecorder) BatchShortenURL(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BatchShortenURL", reflect.TypeOf((*MockshortenBatchServicer)(nil).BatchShortenURL), arg0, arg1, arg2)
}

// MockshortenBatchAuthServicer is a mock of shortenBatchAuthServicer interface.
type MockshortenBatchAuthServicer struct {
	ctrl     *gomock.Controller
	recorder *MockshortenBatchAuthServicerMockRecorder
}

// MockshortenBatchAuthServicerMockRecorder is the mock recorder for MockshortenBatchAuthServicer.
type MockshortenBatchAuthServicerMockRecorder struct {
	mock *MockshortenBatchAuthServicer
}

// NewMockshortenBatchAuthServicer creates a new mock instance.
func NewMockshortenBatchAuthServicer(ctrl *gomock.Controller) *MockshortenBatchAuthServicer {
	mock := &MockshortenBatchAuthServicer{ctrl: ctrl}
	mock.recorder = &MockshortenBatchAuthServicerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockshortenBatchAuthServicer) EXPECT() *MockshortenBatchAuthServicerMockRecorder {
	return m.recorder
}

// GetUserIDFromCtx mocks base method.
func (m *MockshortenBatchAuthServicer) GetUserIDFromCtx(arg0 context.Context) (models.UserID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserIDFromCtx", arg0)
	ret0, _ := ret[0].(models.UserID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserIDFromCtx indicates an expected call of GetUserIDFromCtx.
func (mr *MockshortenBatchAuthServicerMockRecorder) GetUserIDFromCtx(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserIDFromCtx", reflect.TypeOf((*MockshortenBatchAuthServicer)(nil).GetUserIDFromCtx), arg0)
}
